{"version":3,"sources":["../src/index.js"],"names":["app","Koa","bodyparser","use","path","join","__dirname","pathPrefix","extension","template","ctx","next","start","Date","ms","console","log","method","url","require","routes","status","render","on","err","port","parseInt","config","server","http","createServer","callback","listen","error","syscall","code","process","exit"],"mappings":"uSAAA,4B;AACA,0B;AACA,4B;AACA,qC;AACA,yC;AACA,mC;AACA,+C;AACA,uC;AACA,gD;AACA,yC;AACA,kC;;AAEA,IAAMA,MAAM,IAAIC,aAAJ,EAAZ;AACA,IAAMC,aAAa,8BAAnB;;AAEA;AACAF,IAAIG,GAAJ,CAAQ,0BAAQD,UAAR,CAAR;AACAF,IAAIG,GAAJ,CAAQ,0BAAQ,wBAAR,CAAR;AACAH,IAAIG,GAAJ,CAAQ,0BAAQ,0BAAR,CAAR;;AAEA;AACAH,IAAIG,GAAJ;AACE;AACE,6BAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAV,EAA6C;AAC3CC,cAAY,EAD+B,EAA7C,CADF,CADF;;;;;AAQA;AACAP,IAAIG,GAAJ;AACE,wBAAMC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAN,EAAwC;AACtCE,aAAW,KAD2B,EAAxC,CADF;;;;AAMA;AACA,0BAAWR,GAAX,EAAgB;AACdS,YAAU,eADI,EAAhB;;;AAIA;AACAT,IAAIG,GAAJ,kGAAQ,iBAAOO,GAAP,EAAYC,IAAZ;AACAC,iBADA,GACQ,IAAIC,IAAJ,EADR;AAEAF,oBAFA;AAGAG,cAHA,GAGK,IAAID,IAAJ,KAAaD,KAHlB;AAING,oBAAQC,GAAR,CAAeN,IAAIO,MAAnB,SAA6BP,IAAIQ,GAAjC,WAA0CJ,EAA1C,SAJM,mEAAR;;;AAOA;AACAd,IAAIG,GAAJ,mGAAQ,kBAAOO,GAAP,EAAYC,IAAZ;AACAQ,sBAAQ,UAAR,EAAoBC,MAApB,GAA6BV,GAA7B,EAAkCC,IAAlC,CADA,uEAAR;;;AAIA;AACAX,IAAIG,GAAJ,mGAAQ,kBAAMO,GAAN;AACNA,gBAAIW,MAAJ,GAAa,GAAb,CADM;AAEAX,kBAAIY,MAAJ,CAAW,KAAX,CAFA,uEAAR;;;AAKA;AACAtB,IAAIuB,EAAJ,CAAO,OAAP,oGAAgB,kBAAOC,GAAP,EAAYd,GAAZ;AACdK,oBAAQC,GAAR,CAAY,gBAAZ,EAA8BQ,GAA9B,EADc,qEAAhB;;;AAIA,IAAMC,OAAOC,SAASC,iBAAOF,IAAP,IAAe,MAAxB,CAAb;AACA,IAAMG,SAASC,eAAKC,YAAL,CAAkB9B,IAAI+B,QAAJ,EAAlB,CAAf;;AAEAH,OAAOI,MAAP,CAAcP,IAAd;AACAG,OAAOL,EAAP,CAAU,OAAV,EAAmB,iBAAS;AAC1B,MAAIU,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;AACD;AACA,UAAQA,MAAME,IAAd;AACE,SAAK,QAAL;AACEpB,cAAQkB,KAAR,CAAcR,OAAO,+BAArB;AACAW,cAAQC,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEtB,cAAQkB,KAAR,CAAcR,OAAO,oBAArB;AACAW,cAAQC,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMJ,KAAN,CAVJ;;AAYD,CAjBD;AAkBAL,OAAOL,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3BR,UAAQC,GAAR,CAAY,uBAAZ,EAAqCS,IAArC;AACD,CAFD,E;;AAIezB,G","file":"index.js","sourcesContent":["import http from \"http\";\nimport Koa from \"koa\";\nimport path from \"path\";\nimport views from \"koa-views\";\nimport convert from \"koa-convert\";\nimport json from \"koa-json\";\nimport Bodyparser from \"koa-bodyparser\";\nimport logger from \"koa-logger\";\nimport koaStatic from \"koa-static-plus\";\nimport koaOnError from \"koa-onerror\";\nimport config from \"./config\";\n\nconst app = new Koa();\nconst bodyparser = Bodyparser();\n\n// middlewaresy\napp.use(convert(bodyparser));\napp.use(convert(json()));\napp.use(convert(logger()));\n\n// static\napp.use(\n  convert(\n    koaStatic(path.join(__dirname, \"../public\"), {\n      pathPrefix: \"\"\n    })\n  )\n);\n\n// views\napp.use(\n  views(path.join(__dirname, \"../views\"), {\n    extension: \"ejs\"\n  })\n);\n\n// 500 error\nkoaOnError(app, {\n  template: \"views/500.ejs\"\n});\n\n// logger\napp.use(async (ctx, next) => {\n  const start = new Date();\n  await next();\n  const ms = new Date() - start;\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n});\n\n// response router\napp.use(async (ctx, next) => {\n  await require(\"./routes\").routes()(ctx, next);\n});\n\n// 404\napp.use(async ctx => {\n  ctx.status = 404;\n  await ctx.render(\"404\");\n});\n\n// error logger\napp.on(\"error\", async (err, ctx) => {\n  console.log(\"error occured:\", err);\n});\n\nconst port = parseInt(config.port || \"3000\");\nconst server = http.createServer(app.callback());\n\nserver.listen(port);\nserver.on(\"error\", error => {\n  if (error.syscall !== \"listen\") {\n    throw error;\n  }\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case \"EACCES\":\n      console.error(port + \" requires elevated privileges\");\n      process.exit(1);\n      break;\n    case \"EADDRINUSE\":\n      console.error(port + \" is already in use\");\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n});\nserver.on(\"listening\", () => {\n  console.log(\"Listening on port: %d\", port);\n});\n\nexport default app;\n"]}