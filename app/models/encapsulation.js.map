{"version":3,"sources":["../../src/models/encapsulation.js"],"names":["format","globalCode","Enums","SUCCESS","SUCCESS_TEXT","name","encapsulationBody","enums","data"],"mappings":"uCAAA,iD;;AAEmB,2B,CAAXA,M,kBAAAA,M;;AAER,IAAMC,aAAa,SAAbA,UAAa,OAAQ;AACzB,MAAMC,QAAQ;AACZC,aAAS,CADG;AAEZC,kBAAc,SAFF,EAAd;;AAIA,SAAO,CAACF,MAAMG,IAAN,CAAD,EAAcH,MAAMG,OAAO,OAAb,CAAd,CAAP;AACD,CAND;;AAQA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACzC;AACGR,SAAO,CAAP,KAAa,MADhB,IACyBC,WAAWM,KAAX,EAAkB,CAAlB,CADzB;AAEGP,SAAO,CAAP,KAAa,SAFhB,IAE4BC,WAAWM,KAAX,EAAkB,CAAlB,CAF5B;AAGGP,SAAO,CAAP,KAAa,MAHhB,IAGyBQ,IAHzB;;AAKD,CAND,C;;AAQeF,iB","file":"encapsulation.js","sourcesContent":["import getMockConfig from \"../utils/mockConfig\";\n\nconst { format } = getMockConfig();\n\nconst globalCode = name => {\n  const Enums = {\n    SUCCESS: 0,\n    SUCCESS_TEXT: \"Success\"\n  };\n  return [Enums[name], Enums[name + \"_TEXT\"]];\n};\n\nconst encapsulationBody = (enums, data) => {\n  return {\n    [format[0] || \"code\"]: globalCode(enums)[0],\n    [format[1] || \"message\"]: globalCode(enums)[1],\n    [format[2] || \"data\"]: data\n  };\n};\n\nexport default encapsulationBody;\n"]}